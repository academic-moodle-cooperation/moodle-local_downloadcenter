{"version":3,"file":"modfilter.min.js","sources":["../src/modfilter.js"],"sourcesContent":["/**\n * Handles filtering of items on download center page\n *\n * @module        local_downloadcenter/modfilter\n * @author        Simeon Naydenov (moniNaydenov@gmail.com)\n * @copyright     2022 Academic Moodle Cooperation {@link http://www.academic-moodle-cooperation.org}\n * @license       http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module local_downloadcenter/modfilter\n */\ndefine(['jquery', 'core/str', 'core/url'], function($, Str, url) {\n\n    const ModFilter = function(modnames) {\n\n        const instance = this;\n        this.modnames = modnames;\n        this.strings = {};\n        this.formid = null;\n        this.currentlyshown = false;\n        this.modlist = null;\n\n        Str.get_strings([\n            {key: 'all', component: 'moodle'},\n            {key: 'none', component: 'moodle'},\n            {key: 'select', component: 'moodle'},\n            {key: 'showtypes', component: 'backup'},\n            {key: 'hidetypes', component: 'backup'}\n        ]).done(function(strs) {\n            // Init strings.. new moodle super cool way...\n            instance.strings.all = strs[0];\n            instance.strings.none = strs[1];\n            instance.strings.select = strs[2];\n            instance.strings.showtypes = strs[3];\n            instance.strings.hidetypes = strs[4];\n\n            const firstsection = $('div[role=\"main\"] > form .card.block').first();\n            instance.formid = firstsection.closest('form').prop('id');\n\n            // Add global select all/none options..\n            const showTypeOptionsLink = '<span class=\"font-weight-bold ml-3 text-nowrap\">' +\n                '(<a id=\"downloadcenter-bytype\" href=\"#\">' + instance.strings.showtypes + '</a>)' + '</span>';\n            let html = instance.htmlGenerator('included', instance.strings.select);\n            let links = $(document.createElement('div'));\n            links.addClass('grouped_settings section_level block card');\n            links.html(html);\n            links.find('.downloadcenter_selector .col-md-9').append(showTypeOptionsLink);\n\n            links.insertBefore(firstsection);\n\n            // For each module type on the course, add hidden select all/none options..\n            instance.modlist = $(document.createElement('div'));\n            instance.modlist.prop('id', 'mod_select_links');\n            instance.modlist.prop('class', 'm-l-2');\n            instance.modlist.appendTo(links);\n            instance.modlist.hide();\n\n            for (let mod in instance.modnames) {\n                // Only include actual values from the list..\n                if (!instance.modnames.hasOwnProperty(mod)) {\n                    continue;\n                }\n\n                const img = '<img src=\"' + url.imageUrl('icon', 'mod_' + mod) + '\" class=\"activityicon\" />';\n                html = instance.htmlGenerator('mod_' + mod, img + instance.modnames[mod]);\n                const modlinks = $(document.createElement('div'));\n                modlinks.addClass('grouped_settings section_level');\n                modlinks.html(html);\n                modlinks.appendTo(instance.modlist);\n                instance.initlinks(modlinks, mod);\n            }\n\n            // Attach events to links!\n            $('#downloadcenter-all-included').click(function(e) {\n                instance.helper(e, true, 'item_');\n            });\n            $('#downloadcenter-none-included').click(function(e) {\n                instance.helper(e, false, 'item_');\n            });\n            $('#downloadcenter-bytype').click(function(e) {\n                e.preventDefault(); instance.toggletypes();\n            });\n            // Attach event to checkboxes!\n            $('input.form-check-input').click(function() {\n                instance.checkboxhandler($(this)); instance.updateFormState();\n            });\n        });\n\n    };\n\n    ModFilter.prototype.checkboxhandler = function($checkbox) {\n        const prefix = 'item_topic';\n        const shortprefix = 'item_';\n        const name = $checkbox.prop('name');\n        const checked = $checkbox.prop('checked');\n        if (name.substring(0, shortprefix.length) === shortprefix) {\n            let $parent = $checkbox.parentsUntil('form', '.card');\n            if ($parent.length > 1) {\n                $parent = $parent.first();\n            }\n            if (name.substring(0, prefix.length) === prefix) {\n                $parent.find('input.form-check-input').prop('checked', checked);\n            } else {\n                if (checked) {\n                    $parent.find('input.form-check-input[name^=\"item_topic\"]').prop('checked', true);\n                }\n            }\n        }\n    };\n\n    ModFilter.prototype.updateFormState = function() {\n        // At this point, we really need to persuade the form we are part of to\n        // update all of its disabledIf rules. However, as far as I can see,\n        // given the way that lib/form/form.js is written, that is impossible.\n        if (this.formid && M.form && M.form.updateFormState) {\n            M.form.updateFormState(this.formid);\n        }\n    };\n\n    // Toggles the display of the hidden module select all/none links.\n    ModFilter.prototype.toggletypes = function() {\n        // Change text of type toggle link.\n        const link = $('#downloadcenter-bytype');\n        if (this.currentlyshown) {\n            link.text(this.strings.showtypes);\n        } else {\n            link.text(this.strings.hidetypes);\n        }\n        this.modlist.animate({height: 'toggle'}, 500, 'swing');\n\n        this.currentlyshown = !this.currentlyshown;\n\n    };\n\n    ModFilter.prototype.initlinks = function(links, mod) {\n        const instance = this;\n        $('#downloadcenter-all-mod_' + mod).click(function(e) {\n            instance.helper(e, true, 'item_', mod);\n        });\n        $('#downloadcenter-none-mod_' + mod).click(function(e) {\n            instance.helper(e, false, 'item_', mod);\n        });\n    };\n\n    ModFilter.prototype.helper = function(e, check, type, mod) {\n        e.preventDefault();\n        let prefix = '';\n        if (typeof mod !== 'undefined') {\n            prefix = 'item_' + mod + '_';\n        }\n\n        const len = type.length;\n\n        $('input[type=\"checkbox\"]').each(function(i, checkbox) {\n            checkbox = $(checkbox);\n            const name = checkbox.prop('name');\n\n            // If a prefix has been set, ignore checkboxes which don't have that prefix.\n            if (prefix && name.substring(0, prefix.length) !== prefix) {\n                return;\n            }\n            if (name.substring(0, len) === type) {\n                checkbox.prop('checked', check);\n            }\n            if (check) {\n                checkbox.closest('.card.block').find('.fitem:first-child input[type=\"checkbox\"]').prop('checked', check);\n            }\n        });\n\n        this.updateFormState();\n    };\n\n    ModFilter.prototype.htmlGenerator = function(idtype, heading) {\n        let links = '<a id=\"downloadcenter-all-' + idtype + '\" href=\"#\">' + this.strings.all + '</a> / ';\n        links += '<a id=\"downloadcenter-none-' + idtype + '\" href=\"#\">' + this.strings.none + '</a>';\n        return this.rowGenerator(heading, links);\n    };\n\n    ModFilter.prototype.rowGenerator = function(heading, content) {\n        let ret = '<div class=\"form-group row fitem downloadcenter_selector\">';\n        ret += '<div class=\"col-md-3\"></div>';\n        ret += '<div class=\"col-md-9\">';\n        ret += '<label><span class=\"itemtitle\">' + heading + '</span></label>';\n        ret += '<span class=\"text-nowrap\">' + content + '</span>';\n        ret += '</div>';\n        ret += '</div>';\n        return ret;\n    };\n\n    return {\n        init: function(modnames) {\n            return new ModFilter(modnames);\n        }\n    };\n});\n"],"names":["define","$","Str","url","ModFilter","modnames","instance","this","strings","formid","currentlyshown","modlist","get_strings","key","component","done","strs","all","none","select","showtypes","hidetypes","firstsection","first","closest","prop","showTypeOptionsLink","html","htmlGenerator","links","document","createElement","addClass","find","append","insertBefore","appendTo","hide","mod","hasOwnProperty","img","imageUrl","modlinks","initlinks","click","e","helper","preventDefault","toggletypes","checkboxhandler","updateFormState","prototype","$checkbox","name","checked","substring","length","$parent","parentsUntil","M","form","link","text","animate","height","check","type","prefix","len","each","i","checkbox","idtype","heading","rowGenerator","content","ret","init"],"mappings":"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"}